*-----------------------------------------------------------------------------
* <Rating>207</Rating>
*-----------------------------------------------------------------------------
    FUNCTION TP.EXTRACT(ACCOUNT.NO, MONTH, Y.APPLICATION,Y.AMT,Y.CR.DR,Y.N)
    $INSERT T24.BP I_COMMON
    $INSERT T24.BP I_EQUATE
    $INSERT T24.BP I_ENQUIRY.COMMON
    $INSERT T24.BP I_F.TELLER
    $INSERT T24.BP I_F.ACCT.ACTIVITY
    $INSERT T24.BP I_F.CATEGORY
    $INCLUDE T24.BP I_F.FUNDS.TRANSFER
    $INCLUDE T24.BP I_F.ACCOUNT
    $INCLUDE T24.BP I_F.COMPANY
    $INCLUDE T24.BP I_F.STMT.ENTRY
    $INCLUDE NBL.BP I_F.BD.H.BRANCH.CODE
    $INCLUDE NBL.BP I_F.BD.H.TRANS.PROFILE

   ! IF ACCOUNT.NO THEN RETURN
!    RETURN
    FIRST.DATE = MONTH : '01'
    CALL GET.LAST.DOM(MONTH,LAST.DATE,LAST.DAY,MONTH.NAME)

    CALL OPF("FBNK.STMT.ENTRY",F.STMT.ENTRY)
    CALL OPF("FBNK.BD.H.TRANS.PROFILE",F.TP)

    MAX.CASH.DR = 0
    MAX.CASH.CR = 0

    MAX.TRNF.DR = 0
    MAX.TRNF.CR = 0

    NO.CASH.DR = 0
    NO.CASH.CR = 0

    NO.TRNF.DR =0
    NO.TRNF.CR = 0
!---------------------------------
    TP.NO.CASH.CR = 0
    TP.MAX.CASH.CR = 0
    TP.TOTAL.CASH.CR = 0
    TP.NO.CASH.DR = 0
    TP.MAX.CASH.DR = 0
    TP.TOTAL.CASH.DR=0
    TP.NO.TRNF.CR = 0
    TP.MAX.TRNF.CR = 0
    TP.TOTAL.TRNF.CR = 0
    TP.NO.TRNF.DR = 0
    TP.MAX.TRNF.DR = 0
    TP.TOTAL.TRNF.DR = 0

!--------------------------------
    CLEARING.FLAG=0

    CALL EB.ACCT.ENTRY.LIST(ACCOUNT.NO,FIRST.DATE,LAST.DATE,ID.LIST,OPENING.BAL,ER)
    LOOP
        REMOVE STMT.ID FROM ID.LIST SETTING POS
    WHILE STMT.ID:POS
        CALL F.READ("FBNK.STMT.ENTRY",STMT.ID,R.STMT,F.STMT.ENTRY,Y.ACCT.ERR)
        IF R.STMT<AC.STE.RECORD.STATUS> NE 'REVE' THEN
            TXN.CODE = R.STMT<AC.STE.TRANSACTION.CODE>
            AMOUNT.LCY = R.STMT<AC.STE.AMOUNT.LCY>

            BEGIN CASE
!------------------------------CASH DEPOSIT---------------------------
            CASE Y.APPLICATION EQ 'TELLER' AND Y.CR.DR EQ 'CREDIT' AND (TXN.CODE EQ '52' OR TXN.CODE EQ '141')
                TOTAL.CASH.CR = TOTAL.CASH.CR + AMOUNT.LCY
                NO.CASH.CR = NO.CASH.CR + 1
                IF AMOUNT.LCY > MAX.CASH.CR THEN
                    MAX.CASH.CR = AMOUNT.LCY
                END

!------------------------------CASH WITHDRAW---------------------------
            CASE Y.APPLICATION EQ 'TELLER' AND Y.CR.DR EQ 'DEBIT' AND (TXN.CODE EQ '2' OR TXN.CODE EQ '26' OR TXN.CODE EQ '85' OR TXN.CODE EQ '138')
                TOTAL.CASH.DR = TOTAL.CASH.DR + AMOUNT.LCY
                NO.CASH.DR = NO.CASH.DR + 1
                IF AMOUNT.LCY < MAX.CASH.DR THEN
                    MAX.CASH.DR = AMOUNT.LCY
                END

!------------------------------90 = INWARD CLG. | 201=OUTWARD CHQ DR ---------------------------
!            CASE TXN.CODE = 90 OR TXN.CODE = 201
!                TOTAL.TRNF.DR = TOTAL.TRNF.DR + AMOUNT.LCY
!                NO.TRNF.DR = NO.TRNF.DR + 1
!                IF AMOUNT.LCY < MAX.CASH.DR THEN
!                    MAX.TRNF.DR = AMOUNT.LCY
!                END
!                CLEARING.FLAG=1


!------------------------------213=TRANSFER | 201= Online Transfer ---------------------------

            CASE Y.APPLICATION EQ 'FUNDS.TRANSFER' AND ((TXN.CODE EQ '213' OR TXN.CODE EQ '201') AND AMOUNT.LCY < 0)
                TOTAL.TRNF.DR = TOTAL.TRNF.DR + AMOUNT.LCY
                NO.TRNF.DR = NO.TRNF.DR + 1
                IF AMOUNT.LCY < MAX.TRNF.DR THEN
                    MAX.TRNF.DR = AMOUNT.LCY
                END

            CASE Y.APPLICATION EQ 'FUNDS.TRANSFER' AND ((TXN.CODE EQ '213' OR TXN.CODE EQ '201') AND AMOUNT.LCY > 0)
                TOTAL.TRNF.CR = TOTAL.TRNF.CR + AMOUNT.LCY
                NO.TRNF.CR = NO.TRNF.CR + 1
                IF AMOUNT.LCY > MAX.TRNF.CR THEN
                    MAX.TRNF.CR = AMOUNT.LCY
                END

            END CASE

        END
    REPEAT

    IF Y.N THEN
        BEGIN CASE
        CASE Y.CR.DR EQ 'CREDIT' AND Y.APPLICATION EQ 'TELLER'        ;!AND Y.AMT > MAX.CASH.CR
            IF Y.AMT > ABS(MAX.CASH.CR) THEN
                MAX.CASH.CR = Y.AMT
            END
            TOTAL.CASH.CR = TOTAL.CASH.CR + Y.AMT
            NO.CASH.CR = NO.CASH.CR + 1

        CASE Y.CR.DR EQ 'CREDIT' AND Y.APPLICATION EQ 'FUNDS.TRANSFER'          ;!AND Y.AMT > MAX.TRNF.CR
            IF Y.AMT > ABS(MAX.TRNF.CR) THEN
                MAX.TRNF.CR = Y.AMT
            END
            TOTAL.TRNF.CR = TOTAL.TRNF.CR + Y.AMT
            NO.TRNF.CR = NO.TRNF.CR + 1

        CASE Y.CR.DR EQ 'DEBIT' AND Y.APPLICATION EQ 'TELLER'         ;!AND Y.AMT > MAX.CASH.DR
            IF Y.AMT > ABS(MAX.CASH.DR) THEN
                MAX.CASH.DR = Y.AMT
            END
            TOTAL.CASH.DR = TOTAL.CASH.DR - Y.AMT
            NO.CASH.DR = NO.CASH.DR + 1

        CASE Y.CR.DR EQ 'DEBIT' AND Y.APPLICATION EQ 'FUNDS.TRANSFER' ;!AND Y.AMT > MAX.TRNF.DR
            IF Y.AMT > ABS(MAX.TRNF.DR) THEN
                MAX.TRNF.DR = Y.AMT
            END
            TOTAL.TRNF.DR = TOTAL.TRNF.DR - Y.AMT
            NO.TRNF.DR = NO.TRNF.DR + 1
        END CASE
    END

    CALL F.READ("FBNK.BD.H.TRANS.PROFILE",ACCOUNT.NO,R.TP,F.TP,Y.TP.ERR)
    IF NOT(R.TP) THEN
        RETURN ('TP NOT FOUND')
    END


    IF R.TP<BD.TRN.CASH.TRANS.NO> NE '' THEN
        TP.NO.CASH.CR = R.TP<BD.TRN.CASH.TRANS.NO>
    END

    IF R.TP<BD.TRN.MAX.IND.TRANS> NE '' THEN
        TP.MAX.CASH.CR = R.TP<BD.TRN.MAX.IND.TRANS>
    END

    IF R.TP<BD.TRN.CASH.TOT.AMT> NE '' THEN
        TP.TOTAL.CASH.CR = R.TP<BD.TRN.CASH.TOT.AMT>
    END

    IF R.TP<BD.TRN.WITH.TRANS.NO> NE '' THEN
        TP.NO.CASH.DR = R.TP<BD.TRN.WITH.TRANS.NO>
    END

    IF R.TP<BD.TRN.MAX.WITH.TRANS> NE '' THEN
        TP.MAX.CASH.DR = R.TP<BD.TRN.MAX.WITH.TRANS>
    END

    IF  R.TP<BD.TRN.WITH.TOT.AMT> NE '' THEN
        TP.TOTAL.CASH.DR = R.TP<BD.TRN.WITH.TOT.AMT>
    END

    IF R.TP<BD.TRN.DEP.TRANS.NO> NE '' THEN
        TP.NO.TRNF.CR = R.TP<BD.TRN.DEP.TRANS.NO>
    END

    IF R.TP<BD.TRN.DEP.MAX.TRANS> NE '' THEN
        TP.MAX.TRNF.CR = R.TP<BD.TRN.DEP.MAX.TRANS>
    END

    IF R.TP<BD.TRN.DEP.TOT.TRANS> NE '' THEN
        TP.TOTAL.TRNF.CR = R.TP<BD.TRN.DEP.TOT.TRANS>
    END

    IF R.TP<BD.TRN.PAY.TRANS.NO> NE '' THEN
        TP.NO.TRNF.DR = R.TP<BD.TRN.PAY.TRANS.NO>
    END

    IF R.TP<BD.TRN.PAY.MAX.TRANS> NE '' THEN
        TP.MAX.TRNF.DR = R.TP<BD.TRN.PAY.MAX.TRANS>
    END

    IF R.TP<BD.TRN.PAY.TOT.TRANS> NE '' THEN
        TP.TOTAL.TRNF.DR = R.TP<BD.TRN.PAY.TOT.TRANS>
    END

    VIOLATED = ""


    BEGIN CASE
    CASE Y.APPLICATION EQ 'TELLER' AND Y.CR.DR EQ 'CREDIT' AND (ABS(NO.CASH.CR) NE TP.NO.CASH.CR) AND (ABS(NO.CASH.CR) GT TP.NO.CASH.CR)
        VIOLATED = VIOLATED:VM:TP.NO.CASH.CR:" NO OF CASH CREDIT VIOLATED. "

    CASE Y.APPLICATION EQ 'TELLER' AND Y.CR.DR EQ 'CREDIT' AND (MAX.CASH.CR NE TP.MAX.CASH.CR) AND (MAX.CASH.CR GT TP.MAX.CASH.CR)
        VIOLATED = VIOLATED:VM:TP.MAX.CASH.CR: " MAX CASH CREDIT VIOLATED.  "

    CASE Y.APPLICATION EQ 'TELLER' AND Y.CR.DR EQ 'CREDIT' AND (TOTAL.CASH.CR NE TP.TOTAL.CASH.CR) AND (TOTAL.CASH.CR GT TP.TOTAL.CASH.CR)
        VIOLATED = VIOLATED:VM:TP.TOTAL.CASH.CR: " TOTAL CASH CREDIT VIOLATED. "

    CASE Y.APPLICATION EQ 'TELLER' AND Y.CR.DR EQ 'DEBIT' AND (NO.CASH.DR NE TP.NO.CASH.DR) AND (NO.CASH.DR GE TP.NO.CASH.DR)
        VIOLATED =  VIOLATED:VM:TP.NO.CASH.DR: " NO OF CASH DEBIT VIOLATED. "

    CASE Y.APPLICATION EQ 'TELLER' AND Y.CR.DR EQ 'DEBIT' AND (ABS(MAX.CASH.DR) NE TP.MAX.CASH.DR) AND (ABS(MAX.CASH.DR) GE TP.MAX.CASH.DR)
        VIOLATED = VIOLATED:VM:TP.MAX.CASH.DR:" MAX CASH DEBIT VIOLATED. "

    CASE Y.APPLICATION EQ 'TELLER' AND Y.CR.DR EQ 'DEBIT' AND (ABS(TOTAL.CASH.DR) NE TP.TOTAL.CASH.DR) AND (ABS(TOTAL.CASH.DR) GE TP.TOTAL.CASH.DR)
        VIOLATED = VIOLATED:VM:TP.TOTAL.CASH.DR : " TOTAL CASH DEBIT VIOLATED. "

    CASE Y.APPLICATION EQ 'FUNDS.TRANSFER' AND Y.CR.DR EQ 'CREDIT' AND (NO.TRNF.CR NE TP.NO.TRNF.CR) AND (NO.TRNF.CR GT TP.NO.TRNF.CR)
        VIOLATED = VIOLATED:VM:TP.NO.TRNF.CR:" NO OF TRANSFER CREDIT VIOLATED. "

    CASE Y.APPLICATION EQ 'FUNDS.TRANSFER' AND Y.CR.DR EQ 'CREDIT' AND (MAX.TRNF.CR NE TP.MAX.TRNF.CR) AND (MAX.TRNF.CR GT TP.MAX.TRNF.CR)
        VIOLATED = VIOLATED:VM:TP.MAX.TRNF.CR:" MAX TRANSFER CREDIT VIOLATED. "

    CASE Y.APPLICATION EQ 'FUNDS.TRANSFER' AND Y.CR.DR EQ 'CREDIT' AND (TOTAL.TRNF.CR NE TP.TOTAL.TRNF.CR) AND (TOTAL.TRNF.CR GT TP.TOTAL.TRNF.CR)
        VIOLATED = VIOLATED:VM:TP.TOTAL.TRNF.CR: " TOTAL TRANSFER CREDIT VIOLATED. "

    CASE Y.APPLICATION EQ 'FUNDS.TRANSFER' AND Y.CR.DR EQ 'DEBIT' AND (NO.TRNF.DR NE TP.NO.TRNF.DR) AND (NO.TRNF.DR GT TP.NO.TRNF.DR)
        VIOLATED = VIOLATED :VM:TP.NO.TRNF.DR: " NO OF TRANSFER DEBIT VIOLATED. "

    CASE Y.APPLICATION EQ 'FUNDS.TRANSFER' AND Y.CR.DR EQ 'DEBIT' AND (ABS(MAX.TRNF.DR) NE TP.MAX.TRNF.DR) AND (ABS(MAX.TRNF.DR) GT TP.MAX.TRNF.DR)
        VIOLATED = VIOLATED :VM: TP.MAX.TRNF.DR:" MAX TRANSFER DEBIT VIOLATED. "

    CASE Y.APPLICATION EQ 'FUNDS.TRANSFER' AND Y.CR.DR EQ 'DEBIT' AND (ABS(TOTAL.TRNF.DR) NE TP.TOTAL.TRNF.DR) AND (ABS(TOTAL.TRNF.DR) GT TP.TOTAL.TRNF.DR)
        VIOLATED = VIOLATED :VM:TP.TOTAL.TRNF.DR:" TOTAL TRANSFER DEBIT VIOLATED. "

    END CASE

    RETURN(VIOLATED)

END
